{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\React\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: [\"  \", props.value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    {\n      /* zad5 od: */\n    }\n    let winning = false;\n\n    if (this.props.winning.squares.indexOf(i) >= 0) {\n      winning = true;\n    }\n\n    {\n      /* :do zad5 */\n    }\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      winning: winning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n    {\n      /* zad5: winning */\n    }\n  }\n\n  render() {\n    {\n      /* return (\r\n          <div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(0)}\r\n              {this.renderSquare(1)}\r\n              {this.renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(3)}\r\n              {this.renderSquare(4)}\r\n              {this.renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n              {this.renderSquare(6)}\r\n              {this.renderSquare(7)}\r\n              {this.renderSquare(8)}\r\n            </div>\r\n          </div>\r\n        )\t\t\t\tzad3:  */\n    }\n    const board = [];\n\n    for (let i = 0; i < 3; i++) {\n      const squares = [];\n\n      for (let j = 0; j < 3; j++) squares.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.renderSquare(i * 3 + j)\n      }, i * 3 + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 43\n      }, this));\n\n      board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: squares\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        col: null,\n        row: null\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      sortAsc: true,\n      winning: {\n        result: null,\n        squares: []\n      }\n    };\n    {\n      /* zad1: history col i row; zad4: sortAsc; zad5: winning */\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    const col = i % 3 + 1;\n    {\n      /* zad1 */\n    }\n    const row = Math.floor(i / 3) + 1;\n    {\n      /* zad1 */\n    }\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        col: col,\n        row: row\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n    {\n      /* zad1: history col i row */\n    }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      winning: {\n        result: null,\n        squares: []\n      }\n    });\n    {\n      /* zad5: winning */\n    }\n  }\n\n  toggleSort() {\n    {\n      /* zad4 od: */\n    }\n    this.setState({\n      sortAsc: !this.state.sortAsc\n    });\n    {\n      /* :do zad4 */\n    }\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      {\n        /* w zad4: const na let */\n      }\n      const desc = move ? 'Go to move #' + move + ' [' + step.col + ',' + step.row + ']' : 'Go to game start';\n      {\n        /* zad1: [col, row] */\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          className: this.state.stepNumber == move ? 'bold' : 'none',\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this);\n      {\n        /* zad2: className, CSS: .bold { font-weight: bold; } */\n      }\n    });\n    let sort_desc = 'Sortuj malejąco';\n    {\n      /* zad4 od: */\n    }\n\n    if (!this.state.sortAsc) {\n      moves = moves.reverse();\n      sort_desc = 'Sortuj rosnąco';\n    }\n\n    let sort = /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.toggleSort(),\n      children: sort_desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }, this);\n\n    {\n      /* :do zad4 */\n    }\n    let status;\n\n    if (winner) {\n      {\n        /* status = \"Winner: \" + winner; */\n      }\n      status = \"Winner: \" + winner.result;\n      {\n        /* zad5 */\n      }\n      this.state.winning = winner;\n      {\n        /* zad5 */\n      }\n    } else {\n      if (moves.length == 10) {\n        {\n          /* zad6 od: */\n        }\n        status = \"No more moves! The end.\";\n      } else {\n        {\n          /* :do zad6 */\n        }\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          winning: this.state.winning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n    {\n      /* zad5: Board winning; zad4: div sort */\n    }\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 186,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      {\n        /* return squares[a]; */\n      }\n      return {\n        result: squares[a],\n        squares: [a, b, c]\n      };\n      {\n        /* zad5 */\n      }\n    }\n  }\n\n  return null;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["C:/xampp/htdocs/React/my-app/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","renderSquare","i","winning","squares","indexOf","render","board","j","push","Game","constructor","state","history","Array","fill","col","row","stepNumber","xIsNext","sortAsc","result","handleClick","slice","current","length","calculateWinner","Math","floor","setState","concat","jumpTo","step","toggleSort","winner","moves","map","move","desc","sort_desc","reverse","sort","status","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\t\t{/* zad5: className={props.winning ? 'square winning':'square'} i CSS .winning */}\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\t\t\t{/* zad5 od: */}\r\n    let winning = false;\r\n    if(this.props.winning.squares.indexOf(i)>=0) {\r\n      winning = true;\r\n    }\t\t\t\t\t{/* :do zad5 */}\r\n\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        winning={winning}\r\n      />\r\n    );\t\t{/* zad5: winning */}\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n\t{/* return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    )\t\t\t\tzad3:  */}\r\n\t  \r\n    const board = [];\r\n    for(let i=0; i<3; i++) {\r\n      const squares = [];\r\n      for(let j=0; j<3; j++) squares.push(<span key={i*3+j}>{this.renderSquare(i*3+j)}</span>);\r\n      board.push(<div className=\"board-row\" key={i}>{squares}</div>);\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        {board}\r\n      </div>\r\n    ); \r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null), \r\n          col: null, \r\n          row: null, \r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true, \r\n      sortAsc: true, \r\n      winning: {result: null, squares: []} \r\n    };\t\t\t\t{/* zad1: history col i row; zad4: sortAsc; zad5: winning */}\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    \r\n    const col = (i % 3)+1;\t\t{/* zad1 */}\r\n    const row = Math.floor(i/3)+1;\t{/* zad1 */}\r\n    \r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          col: col, \r\n          row: row \r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext\r\n    });\t\t{/* zad1: history col i row */}\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n      winning: {result: null, squares: []}\r\n    });\t{/* zad5: winning */}\r\n  }\r\n\r\n  toggleSort() {\t\t{/* zad4 od: */}\r\n    this.setState({\r\n      sortAsc: !this.state.sortAsc\r\n    });\t\t\t\t{/* :do zad4 */}\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    \r\n    const moves = history.map((step, move) => {\t\t\t{/* w zad4: const na let */}\r\n      const desc = move ?\r\n        'Go to move #' + move + ' ['+step.col+','+step.row+']' :\r\n        'Go to game start';\t\t{/* zad1: [col, row] */}\r\n      return (\r\n        <li key={move}>\r\n          <button \r\n            onClick={() => this.jumpTo(move)}\r\n            className = { this.state.stepNumber==move ? 'bold' : 'none' }\r\n          >\r\n            {desc}\r\n          </button>\r\n        </li>\r\n      );\t{/* zad2: className, CSS: .bold { font-weight: bold; } */}\r\n    });\r\n    \r\n    let sort_desc = 'Sortuj malejąco';\t\t\t\t{/* zad4 od: */}\r\n    if(!this.state.sortAsc) {\r\n      moves = moves.reverse();\r\n      sort_desc = 'Sortuj rosnąco';\r\n    }\r\n    let sort = <button onClick={() => this.toggleSort()} >{sort_desc}</button>;\t\t{/* :do zad4 */}\r\n\r\n    let status;\r\n    if (winner) {\r\n      {/* status = \"Winner: \" + winner; */}\r\n      status = \"Winner: \" + winner.result;\t\t{/* zad5 */}\r\n      this.state.winning = winner;\t\t{/* zad5 */}\r\n    } else {\r\n      if(moves.length==10) {\t\t\t{/* zad6 od: */}\r\n        status = \"No more moves! The end.\";\r\n      } else {\t\t\t\t\t\t{/* :do zad6 */}\r\n        status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n\t  }\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n            winning={this.state.winning}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <div>{sort}</div>\t\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\t{/* zad5: Board winning; zad4: div sort */}\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      {/* return squares[a]; */}\r\n      return {result: squares[a], squares: [a, b, c]};\t\t{/* zad5 */}\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}