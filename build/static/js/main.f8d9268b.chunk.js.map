{"version":3,"sources":["index.js"],"names":["Square","props","className","winning","onClick","value","Board","i","this","squares","indexOf","board","j","push","renderSquare","React","Component","Game","state","history","Array","fill","col","row","stepNumber","xIsNext","sortAsc","result","slice","length","calculateWinner","Math","floor","setState","concat","step","current","winner","moves","map","move","desc","jumpTo","sort_desc","reverse","status","sort","toggleSort","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8d9268b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n\treturn (\r\n\t\t<button className={props.winning ? 'square winning':'square'} onClick={props.onClick}>\t\t{/* zad5: className='square' na className={props.winning ? 'square winning':'square'} i CSS .winning */}\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nclass Board extends React.Component {\r\n\trenderSquare(i) {\t\t\t{/* zad5 od: */}\r\n\t\tlet winning = false;\r\n\t\tif(this.props.winning.squares.indexOf(i)>=0) {\r\n\t\t\twinning = true;\r\n\t\t}\t\t\t\t\t{/* :do zad5 */}\r\n\r\n\t\treturn (\r\n\t\t\t<Square\r\n\t\t\t\tvalue={this.props.squares[i]}\r\n\t\t\t\tonClick={() => this.props.onClick(i)}\r\n\t\t\t\twinning={winning}\r\n\t\t\t/>\r\n\t\t);\t\t{/* zad5: winning */}\r\n\t}\r\n\r\n\t\r\n\r\n\trender() {\r\n\t{/* return (\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(0)}\r\n\t\t\t\t\t{this.renderSquare(1)}\r\n\t\t\t\t\t{this.renderSquare(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(3)}\r\n\t\t\t\t\t{this.renderSquare(4)}\r\n\t\t\t\t\t{this.renderSquare(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{this.renderSquare(6)}\r\n\t\t\t\t\t{this.renderSquare(7)}\r\n\t\t\t\t\t{this.renderSquare(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\t\t\t\tzad3:\t*/}\r\n\t\t\r\n\t\tconst board = [];\r\n\t\tfor(let i=0; i<3; i++) {\r\n\t\t\tconst squares = [];\r\n\t\t\tfor(let j=0; j<3; j++) squares.push(<span key={i*3+j}>{this.renderSquare(i*3+j)}</span>);\r\n\t\t\tboard.push(<div className=\"board-row\" key={i}>{squares}</div>);\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{board}\r\n\t\t\t</div>\r\n\t\t); \r\n\t}\r\n}\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thistory: [\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: Array(9).fill(null), \r\n\t\t\t\t\tcol: null, \r\n\t\t\t\t\trow: null, \r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tstepNumber: 0,\r\n\t\t\txIsNext: true, \r\n\t\t\tsortAsc: true, \r\n\t\t\twinning: {result: null, squares: []} \r\n\t\t};\t\t\t\t{/* zad1: history col i row; zad4: sortAsc; zad5: winning */}\r\n\t}\r\n\r\n\thandleClick(i) {\r\n\t\tconst history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n\t\tconst current = history[history.length - 1];\r\n\t\tconst squares = current.squares.slice();\r\n\t\tif (calculateWinner(squares) || squares[i]) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsquares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n\t\t\r\n\t\tconst col = (i % 3)+1;\t\t{/* zad1 */}\r\n\t\tconst row = Math.floor(i/3)+1;\t{/* zad1 */}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\thistory: history.concat([\r\n\t\t\t\t{\r\n\t\t\t\t\tsquares: squares,\r\n\t\t\t\t\tcol: col, \r\n\t\t\t\t\trow: row \r\n\t\t\t\t}\r\n\t\t\t]),\r\n\t\t\tstepNumber: history.length,\r\n\t\t\txIsNext: !this.state.xIsNext\r\n\t\t});\t\t{/* zad1: history col i row */}\r\n\t}\r\n\r\n\tjumpTo(step) {\r\n\t\tthis.setState({\r\n\t\t\tstepNumber: step,\r\n\t\t\txIsNext: (step % 2) === 0,\r\n\t\t\twinning: {result: null, squares: []}\r\n\t\t});\t{/* zad5: winning */}\r\n\t}\r\n\r\n\ttoggleSort() {\t\t{/* zad4 od: */}\r\n\t\tthis.setState({\r\n\t\t\tsortAsc: !this.state.sortAsc\r\n\t\t});\t\t\t\t{/* :do zad4 */}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst history = this.state.history;\r\n\t\tconst current = history[this.state.stepNumber];\r\n\t\tconst winner = calculateWinner(current.squares);\r\n\t\t\r\n\t\tlet moves = history.map((step, move) => {\t\t\t{/* w zad4: const na let */}\r\n\t\t\tconst desc = move ?\r\n\t\t\t\t'Ruch #' + move + ' ['+step.col+','+step.row+']' :\r\n\t\t\t\t'Wróć na start';\t\t{/* zad1: [col, row] */}\r\n\t\t\treturn (\r\n\t\t\t\t<li key={move}>\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tonClick={() => this.jumpTo(move)}\r\n\t\t\t\t\t\tclassName = { this.state.stepNumber==move ? 'bold' : 'none' }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{desc}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t);\t{/* zad2: className, CSS: .bold { font-weight: bold; } */}\r\n\t\t});\r\n\t\t\r\n\t\tlet sort_desc = 'Sortuj malejąco';\t\t\t\t{/* zad4 od: */}\r\n\t\tif(!this.state.sortAsc) {\r\n\t\t\tmoves = moves.reverse();\r\n\t\t\tsort_desc = 'Sortuj rosnąco';\r\n\t\t}\r\n\t\tlet sort = <button onClick={() => this.toggleSort()} >{sort_desc}</button>;\t\t{/* :do zad4 */}\r\n\r\n\t\tlet status;\r\n\t\tif (winner) {\r\n\t\t\t{/* status = \"Wygrywa: \" + winner; */}\r\n\t\t\tstatus = \"Wygrywa: \" + winner.result + \"!\";\t\t{/* zad5 */}\r\n\t\t\tthis.state.winning = winner;\t\t{/* zad5 */}\r\n\t\t} else {\r\n\t\t\tif(moves.length==10) {\t\t\t{/* zad6 od: */}\r\n\t\t\t\tstatus = \"Brak ruchów! Koniec gry.\";\r\n\t\t\t} else {\t\t\t\t\t\t{/* :do zad6 */}\r\n\t\t\t\tstatus = \"Teraz kolej: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"game\">\r\n\t\t\t\t<div className=\"game-board\">\r\n\t\t\t\t\t<Board\r\n\t\t\t\t\t\tsquares={current.squares}\r\n\t\t\t\t\t\tonClick={i => this.handleClick(i)}\r\n\t\t\t\t\t\twinning={this.state.winning}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"game-info\">\r\n\t\t\t\t\t<div>{status}</div>\r\n\t\t\t\t\t<div>{sort}</div>\r\n\t\t\t\t\t<ol>{moves}</ol>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\t{/* zad5: Board winning; zad4: div sort */}\r\n\t}\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\nfunction calculateWinner(squares) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6]\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n\t\t\t{/* return squares[a]; */}\r\n\t\t\treturn {result: squares[a], squares: [a, b, c]};\t\t{/* zad5 */}\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n}\r\n"],"sourceRoot":""}